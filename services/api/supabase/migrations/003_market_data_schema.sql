-- ================================================
-- Migration 003: Market Data Schema
-- ================================================
-- Purpose: Add tables for market data (OHLC), symbols, levels, setups, alerts
-- Created: 2025-10-29
-- Author: TradeMatrix.ai Development Team
-- ================================================

-- Enable UUID extension if not already enabled
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ================================================
-- TABLE: market_symbols
-- ================================================
-- Stores information about tradable symbols (DAX, NASDAQ, DOW, etc.)
CREATE TABLE IF NOT EXISTS market_symbols (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  vendor TEXT NOT NULL,                          -- 'twelve_data', 'yahoo', 'stock3'
  symbol TEXT NOT NULL,                          -- 'DAX', 'NDX', 'DJI', 'EUR/USD'
  alias TEXT,                                    -- Alternative name/display name
  tick_size NUMERIC DEFAULT 0.01,                -- Minimum price movement
  timezone TEXT DEFAULT 'Europe/Berlin',         -- Trading timezone
  active BOOLEAN DEFAULT true,                   -- Is symbol actively tracked?
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),

  -- Ensure unique vendor-symbol combination
  UNIQUE(vendor, symbol)
);

-- Index for fast symbol lookups
CREATE INDEX idx_market_symbols_active ON market_symbols(active) WHERE active = true;
CREATE INDEX idx_market_symbols_symbol ON market_symbols(symbol);

-- ================================================
-- TABLE: ohlc
-- ================================================
-- Stores OHLCV (Open, High, Low, Close, Volume) candle data
CREATE TABLE IF NOT EXISTS ohlc (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  ts TIMESTAMPTZ NOT NULL,                       -- Timestamp (UTC)
  symbol_id UUID NOT NULL REFERENCES market_symbols(id) ON DELETE CASCADE,
  timeframe TEXT NOT NULL,                       -- '1m', '5m', '15m', '1h', '1d'
  open NUMERIC NOT NULL,
  high NUMERIC NOT NULL,
  low NUMERIC NOT NULL,
  close NUMERIC NOT NULL,
  volume BIGINT DEFAULT 0,
  created_at TIMESTAMPTZ DEFAULT NOW(),

  -- Prevent duplicate candles
  UNIQUE(symbol_id, timeframe, ts),

  -- Sanity checks
  CHECK (high >= open),
  CHECK (high >= close),
  CHECK (low <= open),
  CHECK (low <= close),
  CHECK (volume >= 0)
);

-- Indexes for fast queries
CREATE INDEX idx_ohlc_symbol_tf_ts ON ohlc(symbol_id, timeframe, ts DESC);
CREATE INDEX idx_ohlc_ts ON ohlc(ts DESC);
CREATE INDEX idx_ohlc_timeframe ON ohlc(timeframe);

-- ================================================
-- TABLE: levels_daily
-- ================================================
-- Stores calculated daily levels (Pivot Points, Y-High/Low)
CREATE TABLE IF NOT EXISTS levels_daily (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  trade_date DATE NOT NULL,
  symbol_id UUID NOT NULL REFERENCES market_symbols(id) ON DELETE CASCADE,

  -- Pivot Points
  pivot NUMERIC,
  r1 NUMERIC,
  r2 NUMERIC,
  s1 NUMERIC,
  s2 NUMERIC,

  -- Yesterday's values
  y_high NUMERIC,
  y_low NUMERIC,
  y_close NUMERIC,

  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),

  -- One record per symbol per day
  UNIQUE(trade_date, symbol_id)
);

-- Index for fast date lookups
CREATE INDEX idx_levels_daily_date ON levels_daily(trade_date DESC);
CREATE INDEX idx_levels_daily_symbol_date ON levels_daily(symbol_id, trade_date DESC);

-- ================================================
-- TABLE: setups
-- ================================================
-- Stores trading setups generated by Morning/US Open Planner
CREATE TABLE IF NOT EXISTS setups (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),

  -- Setup metadata
  module TEXT NOT NULL,                          -- 'morning' | 'usopen'
  symbol_id UUID REFERENCES market_symbols(id) ON DELETE CASCADE,
  strategy TEXT,                                 -- 'asia_sweep', 'y_low_rebound', 'orb'

  -- Trade details
  side TEXT CHECK(side IN ('long', 'short')),
  entry_price NUMERIC,
  stop_loss NUMERIC,
  take_profit NUMERIC,

  -- Confidence & status
  confidence NUMERIC CHECK(confidence >= 0 AND confidence <= 1),
  status TEXT DEFAULT 'pending' CHECK(status IN ('pending', 'active', 'invalid', 'filled', 'cancelled')),

  -- Full setup payload (JSON)
  payload JSONB,

  -- Validation
  CHECK (entry_price > 0),
  CHECK (stop_loss > 0),
  CHECK (take_profit > 0)
);

-- Indexes for fast queries
CREATE INDEX idx_setups_user_id ON setups(user_id);
CREATE INDEX idx_setups_status ON setups(status);
CREATE INDEX idx_setups_created_at ON setups(created_at DESC);
CREATE INDEX idx_setups_module ON setups(module);
CREATE INDEX idx_setups_symbol_id ON setups(symbol_id);

-- ================================================
-- TABLE: alerts
-- ================================================
-- Stores real-time alerts for trading events
CREATE TABLE IF NOT EXISTS alerts (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  symbol_id UUID REFERENCES market_symbols(id) ON DELETE CASCADE,
  created_at TIMESTAMPTZ DEFAULT NOW(),

  -- Alert metadata
  kind TEXT NOT NULL,                            -- 'range_break', 'retest_touch', 'asia_sweep', 'pivot_touch', 'r1_touch', 's1_touch'
  context JSONB,                                 -- Alert-specific data

  -- Delivery status
  sent BOOLEAN DEFAULT false,
  sent_at TIMESTAMPTZ
);

-- Indexes for fast queries
CREATE INDEX idx_alerts_user_id ON alerts(user_id);
CREATE INDEX idx_alerts_sent ON alerts(sent) WHERE sent = false;
CREATE INDEX idx_alerts_created_at ON alerts(created_at DESC);
CREATE INDEX idx_alerts_kind ON alerts(kind);

-- ================================================
-- TRIGGERS: Auto-update timestamps
-- ================================================

-- Trigger function to update updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Apply trigger to tables
DROP TRIGGER IF EXISTS update_market_symbols_updated_at ON market_symbols;
CREATE TRIGGER update_market_symbols_updated_at
  BEFORE UPDATE ON market_symbols
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_levels_daily_updated_at ON levels_daily;
CREATE TRIGGER update_levels_daily_updated_at
  BEFORE UPDATE ON levels_daily
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_setups_updated_at ON setups;
CREATE TRIGGER update_setups_updated_at
  BEFORE UPDATE ON setups
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- ================================================
-- SEED DATA: Default symbols
-- ================================================

INSERT INTO market_symbols (vendor, symbol, alias, tick_size, timezone, active) VALUES
  ('twelve_data', 'DAX', 'DAX 40', 0.5, 'Europe/Berlin', true),
  ('twelve_data', 'NDX', 'NASDAQ 100', 0.25, 'America/New_York', true),
  ('twelve_data', 'DJI', 'Dow Jones 30', 1.0, 'America/New_York', true),
  ('twelve_data', 'EUR/USD', 'Euro / US Dollar', 0.0001, 'Europe/Berlin', true),
  ('twelve_data', 'XAG/USD', 'Silver Spot', 0.01, 'Europe/Berlin', true)
ON CONFLICT (vendor, symbol) DO NOTHING;

-- ================================================
-- COMMENTS
-- ================================================

COMMENT ON TABLE market_symbols IS 'Tradable symbols (DAX, NASDAQ, DOW, Forex, etc.)';
COMMENT ON TABLE ohlc IS 'OHLCV candle data for all timeframes';
COMMENT ON TABLE levels_daily IS 'Daily calculated levels (Pivots, Y-High/Low)';
COMMENT ON TABLE setups IS 'Trading setups generated by Morning/US Open Planner';
COMMENT ON TABLE alerts IS 'Real-time trading alerts';

COMMENT ON COLUMN ohlc.ts IS 'Candle timestamp in UTC';
COMMENT ON COLUMN ohlc.timeframe IS 'Timeframe: 1m, 5m, 15m, 1h, 1d';
COMMENT ON COLUMN setups.module IS 'Planner that generated setup: morning or usopen';
COMMENT ON COLUMN setups.confidence IS 'Signal confidence score (0.0 - 1.0)';
COMMENT ON COLUMN alerts.sent IS 'Has alert been delivered to user?';

-- ================================================
-- END OF MIGRATION 003
-- ================================================
